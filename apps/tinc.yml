#!/bin/bash
#
# Title:      PGBlitz (Tinc)
# Author(s):  MrDoob
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    # FACTS #######################################################################
    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'tinc'
        intport: '655'
        extport: '655'      
        image: 'florider89/tinc'

    # CORE (MANDATORY) ############################################################
    - name: 'Including cron job'
      include_tasks: '/opt/communityapps/apps/_core.yml'

   # LABELS ######################################################################
    - name: 'Adding Traefik'
      set_fact:
        pg_labels:
          traefik.enable: 'true'
          traefik.port: '{{intport}}'
          #traefik.frontend.auth.forward.address: '{{gauth}}'
          traefik.frontend.rule: 'Host:{{pgrole}}.{{domain.stdout}},{{tldset}}'
          com.centurylinklabs.watchtower.enable: 'true'

    - name: 'Setting PG Volumes'
      set_fact:
        pg_volumes:
          - '/opt/appdata/{{pgrole}}/log:/var/log/tinc:rw'
          - '/opt/appdata/{{pgrole}}/data:/etc/tinc:rw'    
          - '{{path.stdout}}:{{path.stdout}}'

    - name: 'Setting PG ENV'
      set_fact:
        pg_env:
          PUID: '1000'
          PGID: '1000'
          TZ: '${TZ}'      
      #- GIT_USER=username
      #- GIT_PASS=password
   #   - GIT_URL=https://git.example.com/config/tinc-network
    #  - ZABBIX_HOSTNAME=tinc-hostname-app      
   #   - CRON_PERIOD=5
   #   - DEBUG=1

  #    - NETWORK=example
   #   - NODE=hostname_example_org
  #    - PUBLIC_IP=123.123.123.249
  #    - PRIVATE_IP=172.22.0.43
  #    - INTERFACE=tun0
   #   - PEERS=hostname1_example_org hostname2_example_org
  #    - COMPRESSION=9
          


    # MAIN DEPLOYMENT #############################################################
    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        image: '{{image}}'
        pull: yes
        published_ports:
          - '{{ports.stdout}}{{extport}}:{{intport}}'    
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        restart_policy: unless-stopped
        networks:
          - name: plexguide
            aliases:
              - '{{pgrole}}'
        state: started
        labels: '{{pg_labels}}'
